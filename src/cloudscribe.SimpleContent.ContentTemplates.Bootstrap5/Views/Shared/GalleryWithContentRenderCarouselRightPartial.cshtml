@model cloudscribe.SimpleContent.ContentTemplates.ViewModels.SimpleGalleryViewModel
@using cloudscribe.SimpleContent.ContentTemplates
@inject IStringLocalizer<ContentTemplateResources> sr
@functions{
    public string GetItemClass(int index)
    {
        if (index == 0) { return "carousel-item active"; }
        return "carousel-item";
    }
}
<div id="carouselRender" class="carousel slide simple-gallery float-md-end ms-2 simple-gallery-side-carousel" data-bs-ride="carousel" data-bs-interval="@Model.CarouselIntervalInMilliseconds" data-bs-pause="hover">
    <div class="carousel-inner">
        @for (int i = 0; i < Model.Items.Count; i++)
        {
            <div class="@GetItemClass(i)">
                <img class="d-block w-100" src="@Model.Items[i].ResizedUrl" alt="@Model.Items[i].AltText" />
                <div class="carousel-caption d-none d-md-block">
                    @if (!string.IsNullOrWhiteSpace(@Model.Items[i].LinkUrl))
                    {
                        <a href="@Model.Items[i].LinkUrl.Trim()"><h5>@Model.Items[i].Title</h5></a>
                    }
                    else
                    {
                        <h5>@Model.Items[i].Title</h5>
                    }
                    <p>@Model.Items[i].Description</p>
                </div>
            </div>
        }
    </div>
    <a class="carousel-control-prev" href="#carouselRender" role="button" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">@sr["Previous"]</span>
    </a>
    <a class="carousel-control-next" href="#carouselRender" role="button" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">@sr["Next"]</span>
    </a>
</div>
@Html.Raw(Model.ContentAbove)
<div class="content-bottom">
    @Html.Raw(Model.ContentBelow)
</div>
