@model cloudscribe.SimpleContent.ContentTemplates.ViewModels.ListWithContentModel
@using cloudscribe.SimpleContent.ContentTemplates
@using cloudscribe.SimpleContent.ContentTemplates.Configuration
@using cloudscribe.SimpleContent.ContentTemplates.ViewModels
@inject IStringLocalizer<ContentTemplateResources> sr
@inject ILinkListOptionsProvider optionsProvider
@{
    
    var sorted = Model.Items.OrderBy(x => x.Sort).ToList();
    var options = await optionsProvider.ResolveLinkListOptions(Context.Request.Host.Host, Context.Request.Path);
    var imageStyle = "height:" + options.ImageRenderMaxHeight.ToString() + "px;";
}
@functions {
public string GetTarget(ListItemModel item)
{
    if (item.OpensInNewWindow) { return "_blank"; }
    return null;
}
}
<div class="content-top">
    @Html.Raw(Model.ContentAbove)
</div>
<div class="links-wrap">
    @for (int i = 0; i < Model.Items.Count; i++)
    {
    <div class="clearfix linklist-item">
        <h2 class="h4"><a href="@sorted[i].LinkUrl" target="@GetTarget(sorted[i])">@sorted[i].Title</a></h2>

        @if (!string.IsNullOrWhiteSpace(sorted[i].ResizedUrl))
        {
            <a target="@GetTarget(sorted[i])" href="@sorted[i].LinkUrl">
                <img class="float-left me-2" src="@sorted[i].ResizedUrl" style="@imageStyle" alt="@sorted[i].AltText" />
            </a>
        }
        <p class="linklist-item-description">@sorted[i].Description</p>
    </div>
    }
</div>
<div class="mt-3 content-bottom">
    @Html.Raw(Model.ContentBelow)
</div>