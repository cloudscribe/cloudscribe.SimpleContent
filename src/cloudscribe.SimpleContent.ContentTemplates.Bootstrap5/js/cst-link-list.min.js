function ListItem(e, t, n, r, i, l, o, s, a) { var d = this; d.Title = ko.observable(decodeEncodedJson(e)).extend({ required: "Title is required" }), d.Description = ko.observable(decodeEncodedJson(t)), d.FullSizeUrl = ko.observable(n), d.ResizedUrl = ko.observable(r), d.ThumbnailUrl = ko.observable(i), d.LinkUrl = ko.observable(l).extend({ required: "Link Url is required", isValidUrl: "Must be a valid url" }), d.Sort = ko.observable(o), d.OpensInNewWindow = ko.observable(s), d.AltText = ko.observable(a), d.incrementSort = function () { d.Sort(d.Sort() + 3) }, d.decrementSort = function () { var e = d.Sort() - 3; e < 0 && (e = 0), d.Sort(e) }, d._testEle = null, d.isValidUrl = function (e) { return !!e.startsWith("/") || (d._testEle || (d._testEle = document.createElement("input"), d._testEle.setAttribute("type", "url")), d._testEle.value = e, d._testEle.validity.valid) } } function ItemListViewModel(e) { var u = this; u.hiddenField = document.getElementById("ItemsJson"), u.handleSortItemChanged = function (e) { u.sortItems(); var t = 1; for (i = 0; i < u.Items().length; i++) { u.Items()[i].Sort.silentUpdate(t), t += 2 } u.sortItems() }, u.Items = ko.observableArray(ko.utils.arrayMap(e, function (e) { var t = new ListItem(e.Title, e.Description, e.FullSizeUrl, e.ResizedUrl, e.ThumbnailUrl, e.LinkUrl, e.Sort, e.OpensInNewWindow, e.AltText); return t.Sort.subscribe(u.handleSortItemChanged), t })), u.addItem = function (e, t, n, r, i, l, o, s, a) { var d = new ListItem(e, t, n, r, i, l, o, s, a); d.Sort.subscribe(u.handleSortItemChanged), u.Items.push(d), window.thisPage = window.thisPage || {}, window.thisPage.hasUnsavedChanges = !0 }, u.newItemTitle = ko.observable(null).extend({ required: "Title is required" }), u.newItemDescription = ko.observable(null), u.newItemFullSizeUrl = ko.observable(null), u.newItemResizedUrl = ko.observable(null), u.newItemThumbnailUrl = ko.observable(null), u.newItemLinkUrl = ko.observable(null).extend({ isValidUrl: null }), u.newItemOpensInNewWindow = ko.observable(!1), u.newItemAltText = ko.observable(null), u.newItemSort = function () { return 0 === u.Items().length ? 1 : Math.max.apply(Math, u.Items().map(function (e) { return e.Sort() })) + 2 }, u.addNewItem = function () { u.addItem(u.newItemTitle(), u.newItemDescription(), u.newItemFullSizeUrl(), u.newItemResizedUrl(), u.newItemThumbnailUrl(), u.newItemLinkUrl(), u.newItemSort(), u.newItemOpensInNewWindow(), u.newItemAltText()), u.newItemTitle(null), u.newItemDescription(null), u.newItemFullSizeUrl(null), u.newItemResizedUrl(null), u.newItemThumbnailUrl(null), u.newItemLinkUrl(null), u.newItemOpensInNewWindow(!1), u.newItemAltText(null), window.cloudscribeDropAndCrop.clearAllItems() }, u.removeItem = function (e) { u.Items.remove(e), window.thisPage = window.thisPage || {}, window.thisPage.hasUnsavedChanges = !0 }, u.getCssClass = function (e) { return 0 === e ? "carousel-item active" : "carousel-item" }, u.dropZoneSuccess = function (e, t) { u.newItemFullSizeUrl(t[0].originalUrl), u.newItemResizedUrl(t[0].resizedUrl), u.newItemThumbnailUrl(t[0].thumbUrl) }, window.DropZoneSuccessHandler = u.dropZoneSuccess, u.handleCropSave = function (e) { u.newItemResizedUrl(e) }, window.HandleCropResult = u.handleCropSave, u.serverFileSelected = function (e) { u.newItemResizedUrl(e) }, window.ServerFileSelected = u.serverFileSelected, u.filteredItems = ko.computed(function () { return ko.utils.arrayFilter(u.Items(), function (e) { return !1 === e.LinkUrl.hasError() && !1 === e.Title.hasError() }) }), u.currentListState = ko.computed(function () { return encodeURIComponent(ko.toJSON(u.filteredItems())) }), u.sortItems = function () { u.Items.sort(function (e, t) { return e.Sort() < t.Sort() ? -1 : e.Sort() > t.Sort() ? 1 : 0 }) }, u._testEle = null, u.isValidNewItemLink = ko.computed(function () { return !u.newItemTitle.hasError() && !u.newItemLinkUrl.hasError() }) } function decodeEncodedJson(e) { if (null === e) return e; if (void 0 === e) return e; var t = e.replace(/\+/g, " "); return decodeURIComponent(t) } ko.observable.fn.silentUpdate = function (e) { this.notifySubscribers = function () { }, this(e), this.notifySubscribers = function () { ko.subscribable.fn.notifySubscribers.apply(this, arguments) } }, ko.extenders.required = function (t, n) { function e(e) { t.hasError(!e), t.validationMessage(e ? "" : n || "This field is required") } return t.hasError = ko.observable(), t.validationMessage = ko.observable(), e(t()), t.subscribe(e), t }, ko.extenders.isValidUrl = function (t, e) { t.hasError = ko.observable(), t.validationMessage = ko.observable(); var n = null; function r(e) { if (e) { if (e.startsWith("/")) return t.hasError(!1), void t.validationMessage(""); self._testEle || (n = document.createElement("input")).setAttribute("type", "url"), n.value = e, n.validity.valid ? (t.hasError(!1), t.validationMessage("")) : (t.hasError(!0), t.validationMessage("Must be a valid url")) } else t.hasError(!e), t.validationMessage(e ? "" : "Url is required") } return r(t()), t.subscribe(r), t }, document.addEventListener("DOMContentLoaded", function () { var e = document.getElementById("ItemsConfig"), t = JSON.parse(decodeEncodedJson(e.value)); ko.applyBindings(new ItemListViewModel(t)) });