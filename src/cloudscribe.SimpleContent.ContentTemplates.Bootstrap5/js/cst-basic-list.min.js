function ListItem(e, t, n, o, r, l, i, s) { var d = this; d.Title = ko.observable(decodeEncodedJson(e)), d.Description = ko.observable(decodeEncodedJson(t)), d.FullSizeUrl = ko.observable(n), d.ResizedUrl = ko.observable(o), d.ThumbnailUrl = ko.observable(r), d.LinkUrl = ko.observable(l), d.Sort = ko.observable(i), d.AltText = ko.observable(s), d.incrementSort = function () { d.Sort(d.Sort() + 3) }, d.decrementSort = function () { var e = d.Sort() - 3; e < 0 && (e = 0), d.Sort(e) } } function ItemListViewModel(e) { var a = this; a.hiddenField = document.getElementById("ItemsJson"), a.handleSortItemChanged = function (e) { a.sortItems(); var t = 1; for (i = 0; i < a.Items().length; i++) { a.Items()[i].Sort.silentUpdate(t), t += 2 } a.sortItems() }, a.Items = ko.observableArray(ko.utils.arrayMap(e, function (e) { var t = new ListItem(e.Title, e.Description, e.FullSizeUrl, e.ResizedUrl, e.ThumbnailUrl, e.LinkUrl, e.Sort, e.AltText); return t.Sort.subscribe(a.handleSortItemChanged), t })), a.addItem = function (e, t, n, o, r, l, i, s) { var d = new ListItem(e, t, n, o, r, l, i, s); d.Sort.subscribe(a.handleSortItemChanged), a.Items.push(d), window.thisPage = window.thisPage || {}, window.thisPage.hasUnsavedChanges = !0 }, a.newItemTitle = ko.observable(null), a.newItemDescription = ko.observable(null), a.newItemFullSizeUrl = ko.observable(null), a.newItemResizedUrl = ko.observable(null), a.newItemThumbnailUrl = ko.observable(null), a.newItemLinkUrl = ko.observable(null), a.newItemAltText = ko.observable(null), a.newItemSort = function () { return 0 === a.Items().length ? 1 : Math.max.apply(Math, a.Items().map(function (e) { return e.Sort() })) + 2 }, a.addNewItem = function () { a.addItem(a.newItemTitle(), a.newItemDescription(), a.newItemFullSizeUrl(), a.newItemResizedUrl(), a.newItemThumbnailUrl(), a.newItemLinkUrl(), a.newItemSort(), a.newItemAltText()), a.newItemTitle(null), a.newItemDescription(null), a.newItemFullSizeUrl(null), a.newItemResizedUrl(null), a.newItemThumbnailUrl(null), a.newItemLinkUrl(null), a.newItemAltText(null), a.imageEditor && window.cloudscribeDropAndCrop.clearOneZoneItems(a.imageEditor.dropZoneDiv.id) }, a.removeItem = function (e) { a.Items.remove(e), window.thisPage = window.thisPage || {}, window.thisPage.hasUnsavedChanges = !0 }, a.getCssClass = function (e) { return 0 === e ? "carousel-item active" : "carousel-item" }, a.dropZoneSuccess = function (e, t, n) { a.imageEditor = n, a.newItemFullSizeUrl(t[0].originalUrl), t[0].resizedUrl ? a.newItemResizedUrl(t[0].resizedUrl) : a.newItemResizedUrl(t[0].originalUrl), a.newItemThumbnailUrl(t[0].thumbUrl) }, window.DropZoneSuccessHandler = a.dropZoneSuccess, a.handleCropSave = function (e) { a.newItemResizedUrl(e) }, window.HandleCropResult = a.handleCropSave, a.serverFileSelected = function (e) { a.newItemResizedUrl(e) }, window.ServerFileSelected = a.serverFileSelected, a.currentListState = ko.computed(function () { return encodeURIComponent(ko.toJSON(a.Items)) }), a.sortItems = function () { a.Items.sort(function (e, t) { return e.Sort() < t.Sort() ? -1 : e.Sort() > t.Sort() ? 1 : 0 }) } } function decodeEncodedJson(e) { if (null === e) return e; if (void 0 === e) return e; var t = e.replace(/\+/g, " "); return decodeURIComponent(t) } ko.observable.fn.silentUpdate = function (e) { this.notifySubscribers = function () { }, this(e), this.notifySubscribers = function () { ko.subscribable.fn.notifySubscribers.apply(this, arguments) } }, document.addEventListener("DOMContentLoaded", function () { var e = document.getElementById("ItemsConfig"), t = JSON.parse(decodeEncodedJson(e.value)); ko.applyBindings(new ItemListViewModel(t)) });