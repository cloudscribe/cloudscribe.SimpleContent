@model cloudscribe.SimpleContent.Web.ViewModels.PostEditWithTemplateViewModel
@inject IStringLocalizer<SimpleContent> sr
@inject IBlogRoutes  blogRoutes
@{
    var contentId = Model.Id;
    if (string.IsNullOrWhiteSpace(contentId)) { contentId = "draft-post-" + DateTime.UtcNow.ToString("yyyy-MM-dd-hh"); }
    var legend = sr["Template Fields"].ToString();
    var legendFormat = sr["Template Fields - {0}"].ToString();
    if (Model.Template != null)
    {
        legend = string.Format(legendFormat, Model.Template.Title);

    }
}
@section Styles {
    @{ await Html.RenderPartialAsync("EditWithTemplateStylesPartial", Model); }
}
<h2>@ViewBag.Title <small><a id="lnkCancel" href="@Model.CurrentPostUrl">@sr["Cancel"]</a></small></h2>
@if (!string.IsNullOrEmpty(Model.Id))
{
    <a id="lnkHistory" href="@Url.RouteUrl(blogRoutes.PostHistoryRouteName, new { slug = Model.Slug })">@sr["Version History"]</a>
}
@{ await Html.RenderPartialAsync("EditWithTemplateHistoryInfoPartial", Model); }
    <form method="post" class="form-horizontal" role="form" asp-antiforgery="true" data-submit-once="true">
        <input type="hidden" id="projectId" name="projectId" value="@Model.ProjectId" />
        <input type="hidden" id="id" name="id" value="@Model.Id" />
        <input type="hidden" asp-for="@Model.IsPublished" />
        <input type="hidden" asp-for="@Model.HistoryId" />
        <input type="hidden" asp-for="ContentType" />
        <div asp-validation-summary="All" class="text-danger"></div>
        @Html.ValidationMessage("postediterror", new { @class = "text-danger" })
        <div class="form-group">
            <label asp-for="Title">@sr["Title"]</label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        @{ await Html.RenderPartialAsync("EditWithTemplateCorrelationKeyPartial", Model); }
        @{ await Html.RenderPartialAsync("EditWithTemplateSlugPartial", Model); }
        <div class="form-group">
            <label asp-for="MetaDescription">@sr["Meta Description"]</label>
            <input asp-for="MetaDescription" class="form-control" data-toggle="tooltip" title='@sr["On public pages, meta description is very important to search engines. It should be no longer than 135 – 160 characters long (although Google has recently been testing longer snippets). Any longer and search engines will chop the end off, so make sure any important keywords are nearer the front."]' />
            <span asp-validation-for="MetaDescription" class="text-danger"></span>
        </div>
        <fieldset class="border p-2 mb-2">
            <legend class="w-auto">@legend</legend>
            @{await Html.RenderPartialAsync(Model.Template.EditView, Model.TemplateModel); }
        </fieldset>
        <div class="form-group">
            <label asp-for="Categories">@sr["Categories"]</label>
            <input asp-for="Categories" class="form-control" />
            <span asp-validation-for="Categories" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Author">@sr["Author"]</label>
            <input asp-for="Author" class="form-control" />
            <span asp-validation-for="Author" class="text-danger"></span>
        </div>
        @{ await Html.RenderPartialAsync("EditWithTemplateImageUrlPartial", Model); }
        <div class="form-group">
            <div class="form-check">
                <input asp-for="IsFeatured" class="form-check-input" />
                <label asp-for="IsFeatured" class="form-check-label">@sr["Is Featured"]</label>
            </div>
        </div>

        @if (Model.TeasersEnabled)
        {
           await Html.RenderPartialAsync("EditWithTemplateTeaserHtmlPartial", Model);   
        }
        else
        {
            await Html.RenderPartialAsync("EditTeaserDisabledPartial");
        }

        <div class="form-inline">
            <div class="form-group mt-1">
                <button id="btnSaveDraft" name="SaveMode" value="@SaveMode.SaveDraft" type="submit" class="btn btn-primary" data-disabled-text='@sr["Working..."]' data-enabled-text='@sr["Save Draft"]'>@sr["Save Draft"]</button>
            </div>
            <div class="form-group ml-1 mt-1">
                <button id="btnSavePublish" name="SaveMode" type="submit" value="@SaveMode.PublishNow" class="btn btn-primary" data-disabled-text='@sr["Working..."]' data-enabled-text='@sr["Publish Now"]'>@sr["Publish Now"]</button>
            </div>
            <div class="form-group ml-1 mt-1">
                <button id="SaveMode" name="SaveMode" value="@SaveMode.PublishLater" type="submit" class="btn btn-primary" data-disabled-text='@sr["Working..."]' data-enabled-text='@sr["Publish Later:"]'>@sr["Publish Later:"]</button>
            </div>
            <div class="form-group ml-1 mt-1">
                @{ await Html.RenderPartialAsync("EditWithTemplatePubDate", Model); }
            </div>
            @if (!string.IsNullOrEmpty(Model.Id))
            {
                <div class="form-group ml-4 mt-1">
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirmDeleteModal">
                        @sr["Delete"]
                    </button>
                </div>

            }

        </div>
    </form>
@{ await Html.RenderPartialAsync("EditWithTemplateDraftPubDatePartial", Model); }
@if (!string.IsNullOrEmpty(Model.Id))
{
    <form id="deleteform" class="form-inline" asp-route="@Model.DeletePostRouteName">
        <input asp-for="Id" type="hidden" />
        <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteHeading">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="confirmDeleteHeading">@sr["Confirm Delete"]</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label='@sr["Close"]'><span aria-hidden="true">&times;</span></button>
                    </div>
                    <div class="modal-body">
                        @string.Format(sr["Are you sure you want to delete the post {0}?"], Model.Title)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">@sr["Cancel"]</button>
                        <input type="submit" value='@sr["Delete"]' class="btn btn-danger btn-ok" />
                    </div>
                </div>
            </div>
        </div>

    </form>
}
<div class="modal fade" id="dateRequired" tabindex="-1" role="dialog" aria-labelledby="dateRequiredHeading">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="dateRequiredHeading">@sr["Date Required"]</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label='@sr["Close"]'><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                @sr["To publish later you must enter a date."]
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">@sr["Ok"]</button>

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("EditWithTemplateScriptsPartial", Model); }
}
