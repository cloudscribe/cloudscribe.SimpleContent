var tetherInstance; $(function () { String.format = function () { for (var t = arguments[0], i = 0; i < arguments.length - 1; i++) { var n = RegExp("\\{" + i + "\\}", "gm"); t = t.replace(n, arguments[i + 1]) } return t }; var t = { ui: { treeDiv: $("#tree1"), cmdBarDiv: $("#cmdBar"), selectedPageInput: $("#hdnSelPage"), cmdHeading: $("#cmdHeading"), sortLi: $("#liSort"), editLi: $("#liEdit"), deleteLi: $("#liDelete"), newChildLi: $("#liNewChild"), editLink: $("#lnkEdit"), viewLink: $("#lnkView"), sortButton: $("#lnkSort"), newChildLink: $("#lnkNewChild"), deleteButton: $("#lnkDeletePage"), pubStatusLabel: $("#spnPubStatus"), movePagePromptFormat: $("#config").data("move-prompt-format"), deletePagePromptFormat: $("#config").data("delete-prompt-format"), deletePageWithChildrenPromptFormat: $("#config").data("delete-with-children-prompt-format"), sortChildrenAlphaPagePromptFormat: $("#config").data("sort-children-alpha-prompt-format") }, urls: { treeDataUrl: $("#config").data("service-url"), sortUrl: $("#config").data("sort-url"), moveUrl: $("#config").data("move-url"), deleteUrl: $("#config").data("delete-url"), editUrl: $("#config").data("edit-url"), newPageUrl: $("#config").data("new-page-url") }, xsrfToken: $('[name="__RequestVerificationToken"]:first').val(), showCommands: function (i) { t.ui.selectedPageInput.val(i.id), t.ui.cmdHeading.html(i.name), t.ui.editLink.attr("href", this.urls.editUrl + "/" + i.slug), t.ui.viewLink.attr("href", i.url), t.ui.newChildLink.attr("href", this.urls.newPageUrl + "?parentslug=" + i.slug), t.ui.pubStatusLabel.html(i.pubstatus), t.ui.cmdBarDiv.show(), tetherInstance = new Tether({ element: ".commandPanel", target: ".jqtree-selected", attachment: "top left", targetAttachment: "top right" }), setTimeout(function () { tetherInstance && tetherInstance.position() }), setTimeout(function () { tetherInstance.position() }), i.childcount > 1 ? t.ui.sortLi.show() : t.ui.sortLi.hide(), i.canEdit ? t.ui.editLi.show() : t.ui.editLi.hide(), i.canDelete ? t.ui.deleteLi.show() : t.ui.deleteLi.hide(), i.canCreateChild ? t.ui.newChildLi.show() : t.ui.newChildLi.hide() }, moveNode: function (i, n, o, r) { var a = {}; a.movedNode = i.id, a.targetNode = n.id, a.previousParent = o.id, a.position = r; var d = !1; return $.ajax({ type: "POST", url: t.urls.moveUrl, async: !1, headers: { "X-CSRFToken": this.xsrfToken }, dataType: "json", data: a, success: function (t, i, n) { t.success ? d = !0 : alert(t.message) }, complete: function (t, i) { }, error: function (t, i, n) { alert(n) } }), d }, init: function () { this.ui.sortButton.click(function (i) { i.preventDefault(); var n = t.ui.treeDiv.tree("getNodeById", t.ui.selectedPageInput.val()), o = String.format(t.ui.sortChildrenAlphaPagePromptFormat, n.name); $("#confirmModalBody").html(o), $("#mdlConfirm").modal("show"); var r = function () { $("#mdlConfirm").modal("hide"); var i = {}; i.pageId = n.id, $.ajax({ type: "POST", url: t.urls.sortUrl, headers: { "X-CSRFToken": t.xsrfToken }, async: !1, processData: !0, dataType: "json", data: i, success: function (i, o, r) { i.success ? t.ui.treeDiv.tree("loadDataFromUrl", n) : alert(i.message) }, complete: function (t, i) { }, error: function (t, i, n) { alert(n) } }) }; $("#btnConfirm").off("click").on("click", r) }), t.ui.deleteButton.click(function (i) { i.preventDefault(); var n, o = t.ui.treeDiv.tree("getNodeById", t.ui.selectedPageInput.val()); n = o.childcount > 0 ? String.format(t.ui.deletePageWithChildrenPromptFormat, o.name, o.name) : String.format(t.ui.deletePagePromptFormat, o.name), $("#confirmDeleteModalBody").html(n), $("#mdlDelete").modal("show"); var r = function () { $("#mdlDelete").modal("hide"); var i = {}; i.id = o.id, $.ajax({ type: "POST", url: t.urls.deleteUrl, headers: { "X-CSRFToken": t.xsrfToken }, async: !1, dataType: "json", data: i, success: function (i, n, r) { i.success ? (t.ui.treeDiv.tree("removeNode", o), t.ui.cmdBarDiv.hide()) : alert(i.message) }, complete: function (t, i) { }, error: function (t, i, n) { alert(i) } }) }; $("#btnConfirmDelete").off("click").on("click", r) }), t.ui.treeDiv.tree({ dataUrl: t.urls.treeDataUrl, dragAndDrop: !0, onLoadFailed: function (t) { alert(t) } }), t.ui.treeDiv.bind("tree.click", function (t) { t.node }), t.ui.treeDiv.bind("tree.dblclick", function (t) { console.log(e.node) }), t.ui.treeDiv.bind("tree.select", function (i) { i.node ? t.showCommands(i.node) : (i.previous_node, t.ui.selectedPageInput.val(-1), t.ui.cmdBarDiv.hide()) }), t.ui.treeDiv.bind("tree.contextmenu", function (t) { t.node }), t.ui.treeDiv.bind("tree.move", function (i) { i.preventDefault(); var n = String.format(t.ui.movePagePromptFormat, i.move_info.moved_node.name, i.move_info.position, i.move_info.target_node.name); $("#confirmModalBody").html(n), $("#mdlConfirm").modal("show"); var o = function () { return $("#mdlConfirm").modal("hide"), t.moveNode(i.move_info.moved_node, i.move_info.target_node, i.move_info.previous_parent, i.move_info.position) && i.move_info.do_move(), !1 }; $("#btnConfirm").off("click").on("click", o) }), t.ui.treeDiv.bind("tree.init", function () { }), t.ui.treeDiv.bind("tree.open", function (i) { t.ui.treeDiv.tree("selectNode", null), t.ui.treeDiv.tree("selectNode", i.node) }), t.ui.treeDiv.bind("tree.close", function (i) { t.ui.treeDiv.tree("selectNode", null), t.ui.treeDiv.tree("selectNode", i.node) }) } }; t.init() }), $(window).on("scroll", function () { tetherInstance && tetherInstance.position() });