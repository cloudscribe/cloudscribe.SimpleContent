@model cloudscribe.SimpleContent.Web.ViewModels.ContentHistoryViewModel
@inject IStringLocalizer<SimpleContent> sr
@inject IBlogRoutes  blogRoutes
@inject IPageRoutes pageRoutes
@inject cloudscribe.DateTimeUtils.ITimeZoneHelper tzHelper
@inject cloudscribe.DateTimeUtils.ITimeZoneIdResolver tzResolver
@{ 
    var timeZoneId = await tzResolver.GetUserTimeZoneId();
}
@functions{
    public string GetPreviewUrl(ContentHistory history)
    {
        switch (history.ContentSource)
        {
            case ContentSource.Blog:
                return Url.RouteUrl(blogRoutes.PostWithoutDateRouteName, new { slug = history.Slug, historyId = history.Id });

            case ContentSource.Page:
            default:
                return Url.RouteUrl(pageRoutes.PageRouteName, new { slug = history.Slug, historyId = history.Id });
        }


    }
    public string GetRestoreUrl(ContentHistory history)
    {
        switch (history.ContentSource)
        {
            case ContentSource.Blog:
                return Url.RouteUrl(blogRoutes.PostEditRouteName, new { slug = history.Slug, historyId = history.Id });

            case ContentSource.Page:
            default:
                return Url.RouteUrl(pageRoutes.PageEditRouteName, new { slug = history.Slug, historyId = history.Id });
        }


    }
}
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th></th>
            <th>
                @sr["Archived Date"]
            </th>
            <th>
                @sr["Published Date"]
            </th>
            <th>
                @sr["Archived By"]
            </th>
            <th>
                @sr["Source"]
            </th>
            <th>
                @sr["Title"]
            </th>
            <th>
                @sr["Is Draft"]
            </th>
            <th>
                @sr["Was Deleted"]
            </th>
            <th>
                @sr["Created By"]
            </th>
            <th>
                @sr["Last Modified By"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.History.Data)
        {
        <tr>
            <td>
                @if (Model.CanEditPages && item.ContentSource == ContentSource.Page || Model.CanEditPosts && item.ContentSource == ContentSource.Blog)
                {
                    <a class="btn btn-primary btn-sm" href="@GetPreviewUrl(item)" title="@sr["view this version"]">@sr["View"]</a>
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="@("#confirmDeleteModal" + item.Id)">
                        @sr["Delete"]
                    </button>
                    <form asp-controller="ContentHistory" asp-action="DeleteHistory">
                        <input type="hidden" name="id" value="@item.Id" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                        <div class="modal fade" id="@("confirmDeleteModal" + item.Id)" tabindex="-1" role="dialog" aria-labelledby="@("confirmDeleteHeading" + item.Id)">
                            <div class="modal-dialog modal-sm" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title" id="@("confirmDeleteHeading" + item.Id)">@sr["Confirm Delete"]</h4>
                                        <button type="button" data-bs-dismiss="modal" class="btn-close" aria-label='@sr["Close"]'></button>
                                    </div>
                                    <div class="modal-body">
                                        @sr["Are you sure you want to delete this history item?"]
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">@sr["Cancel"]</button>
                                        <input type="submit" value='@sr["Delete"]' class="btn btn-danger btn-ok" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>

                }
            </td>
            <td>
                @tzHelper.ConvertToLocalTime(item.ArchivedUtc, timeZoneId).ToString()
            </td>
            <td>
                @if (item.PubDate.HasValue)
                {
                    @tzHelper.ConvertToLocalTime(item.PubDate.Value, timeZoneId).ToString()
                }
            </td>
            <td>
                @item.ArchivedBy
            </td>
            <td>
                @item.ContentSource
            </td>
            <td>
                @item.Title
            </td>
            <td>
                @item.IsDraftHx
            </td>
            <td>
                @item.WasDeleted
            </td>
            <td>
                @item.CreatedByUser
            </td>
            <td>
                @item.LastModifiedByUser
            </td>
        </tr>

        }
    </tbody>

</table>
